openapi: 3.0.1
info:
  title: "Simplified API"
  description: "A simplified example - oneOf and anyOf."
  version: "1.0.0"

paths:
  /deposit:
    post:
      summary: "Create Deposit"
      description: "Creates a new deposit."
      operationId: "createDeposit"
      requestBody:
        description: "Information for the new deposit."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerDTO'
      responses:
        '204':
          description: "Deposit successfully created."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'

components:
  schemas:
    StatusResponse:
      anyOf:
        - $ref: '#/components/schemas/ServerOne'
        - $ref: '#/components/schemas/ServerTwo'

    ActiveServer:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier for the server."
        status:
          type: string
        uptime:
          type: string
          format: duration
          description: "How long the server has been active (e.g., 'P3DT5H')."

    InactiveServer:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier for the server."
        status:
          type: string
        reason:
          type: string
          description: "Reason for the server being inactive."

    ServerOne:
      type: object
      properties:
        message:
          type: string

    ServerTwo:
      type: object
      properties:
        details:
          type: string

    ServerDTO:
      oneOf:
        - $ref: '#/components/schemas/ActiveServer'
        - $ref: '#/components/schemas/InactiveServer'
          discriminator:
            propertyName: status
            mapping:
              ACTIVE: '#/components/schemas/ActiveServer'
              INACTIVE: '#/components/schemas/InactiveServer'